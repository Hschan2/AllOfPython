# 추천 시스템 알고리즘

# 추천 시스템
# 유저 선호도 및 과거 행동을 바탕으로 개인에 맞는 관심사를 제공하는 것
# 동영상, 온라인 쇼핑, 뉴스, 금융 상품, 검색 시스템 등 다양한 곳에서 활용

# 랭킹 시스템 vs 추천 시스템
# Top N개의 상품을 추천해주는 것은 추천 시스템에 추천 시스템 분야에는 거의 포함하지 않음
# 개인의 성향이나 과거의 행동에 대한 정보가 반영되지 않았기 때문

# 추천 시스템 방법론
# 1. Content-based Filtering
# 해당 아이템의 도메인을 활용
# 유저가 관심있는 아이템의 속성을 분석하여 새로운 아이템을 추천해주는 것
# Collaborative Filtering (Item-based)와 차이점은 다른 유저의 정보가 사용되지 않은 것

# 예. 이전에 구입한 의류와 비슷한 의류 추천, 비슷한 뉴스 기사 혹은 관련된 다른 기사 추천

# 아이템의 특징을 잘 추출하기 위한 TF-IDF나 Word2Vec처럼 Feature Extraction 방법론이 사용
# 추출된 Feature를 통해 아이템을 비교할 유사도에 대한 선택이 중요

# 장점 - 유저의 선호도에 대한 정보 없이, 아이템 정보만으로 추천 가능
# 단점 - 아이템을 설명할 수 있는 데이터 구축 필요

# 2. Collaborative Filtering
# 유저 - 아이템의 관계로부터 도출되는 추천 시스템
# User-based Similarity와 Item-based Similarity를 기반으로 도출하여 추천

# 장점 - 아이템에 대한 콘텐츠의 정보 없이 사용 가능
# 단점
# - Cold Start, 새로 시작할 때 곤란함으로 새로운 유저나 아이템의 초기 정보 부족의 문제
# - Data Sparsity, 수 많은 유저와 아이템 사이에 경험하지 못한, 구매해보지 못한 경우가 데이터의 대부분을 차지 (예. 온라인 쇼핑에서 구매한 목록보다 구매하지 않은 목록이 많음)
# - Scalability, 유저와 아이템의 수가 많아질수록 데이터의 크기가 기하급수로 커짐

# 3. Memory-based Filtering
# User-Item Matrix로부터 도출되는 유사도 기반 아이템 추천
#     1) User-based
#     유저 간 선호도(아이템에 대한 점수)나 구매 이력을 비교하여 추천하는 방법
#     예. 유저A가 [라면, 삼각김밥, 김치, 콜라]를 구매했다면, 유저 A와 비슷한 쇼핑을 한 유저B [라면, 삼각김밥, 김치]에게 콜라 추천

#     2) Item-based
#     User-based의 반대로 아이템 간 유저 목록을 비교하여 추천하는 방법
#     예. 라면을 [유저A, 유저B, 유저C, 유저D]가 구매했다면, 라면을 산 유저의 목록과 가장 비슷한 삼각김밥 [유저A, 유저B, 유저C, 유저E]을 유저 D에게 추천하는 것. 또는, 유저E에게 라면 추천

# 4. Model-based Filtering
# User-Item interaction을 머신러닝이나 딥러닝과 같은 모델을 학습하는 것
# 장바구니 분석과 같이 아이템 간의 관계를 학습할 수 있고, 클러스터링을 통해 유사한 아이템이나 유저 간의 그룹 형성 가능
# Matrix Factorization, Bayesian Network, Decision Tree 등 다양한 방법론 존재

# 5. Hydrid Filtering
# 콘텐츠 기반 필터링과 협업 힐터링은 장단점이 있기 때문에 두 방법론을 같이 활용하는 방법
# 데이터가 적은 초기 단계에는 콘텐츠 기반 필터링을 하다가 데이터가 누적되고 나서 협업 필터링으로 변경하는 것도 포함

